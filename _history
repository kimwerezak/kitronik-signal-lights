{"entries":[{"timestamp":1744319598467,"editorVersion":"7.0.61","changes":[{"type":"edited","filename":"main.blocks","patch":[{"diffs":[[0,"http"],[-1,"s"],[0,"://"],[-1,"developers.google.com/blockly/xml\"><variables></variables>"],[1,"www.w3.org/1999/xhtml\">\n  "],[0,"<blo"]],"start1":12,"start2":12,"length1":70,"length2":37},{"diffs":[[0,"art\""],[-1," x=\"20\" y=\"20\""],[0,"></b"]],"start1":67,"start2":67,"length1":22,"length2":8},{"diffs":[[0,"</block>"],[1,"\n  "],[0,"<block t"]],"start1":72,"start2":72,"length1":16,"length2":19},{"diffs":[[0,"ver\""],[-1," x=\"225\" y=\"20\""],[0,"></b"]],"start1":107,"start2":107,"length1":23,"length2":8},{"diffs":[[0,"</block>"],[1,"\n"],[0,"</xml>"]],"start1":112,"start2":112,"length1":14,"length2":15}]},{"type":"edited","filename":"main.ts","patch":[{"diffs":[[-1,"input.buttonIsPressed(Button.A)\ninput.buttonIsPressed(Button.A)"],[0,"\n"]],"start1":0,"start2":0,"length1":64,"length2":1}]},{"type":"edited","filename":"pxt.json","patch":[{"diffs":[[0," \"*\""],[-1,",\n        \"pxt-kitronik-move-motor\": \"github:kitronikltd/pxt-kitronik-move-motor#v0.4.20\""],[0,"\n   "]],"start1":149,"start2":149,"length1":97,"length2":8},{"diffs":[[0,".md\""],[-1,",\n        \"main.py\"\n    ],\n    \"preferredEditor\": \"pyprj\""],[1,"\n    ],\n    \"additionalFilePaths\": []"],[0,"\n}\n"]],"start1":233,"start2":233,"length1":64,"length2":44}]},{"type":"added","filename":"main.py","value":"def left_signal():\n    #set front and back lights on left_signal\n    while True:\n    #turn on for 1 second\n    #turn off for 1 second\n\n\ndef right_signal():\n    #set front and back lights on right_signal\n    while True:\n    #turn on for one second\n    #turn off for one second\n\ndef lights_off():\n    #Turn all lights off\n\n\ninput.button_is_pressed(Button.A, left_signal)\n\n    input.button_is_pressed(Button.A, lights_off)\n\ninput.button_is_pressed(Button.B, right_signal)\n\n    input.bugtton_is pressed(Button.B, lights_off)\n"}]},{"timestamp":1744319948113,"editorVersion":"7.0.61","changes":[{"type":"edited","filename":"main.py","patch":[{"diffs":[[0,"nal\n"],[-1,"    \n"],[0,"    "]],"start1":61,"start2":61,"length1":13,"length2":8}]}]},{"timestamp":1744391998655,"editorVersion":"7.0.61","changes":[{"type":"edited","filename":"main.py","patch":[{"diffs":[[0,"nal\n    "],[-1,"p"],[0,"\n    whi"]],"start1":61,"start2":61,"length1":17,"length2":16}]}]},{"timestamp":1744391998751,"editorVersion":"7.0.61","changes":[{"type":"edited","filename":"main.ts","patch":[{"diffs":[[-1,"function left_signal() {\n    // set front and back lights on left_signal\n    \n}\n\n// while True:\n// turn on for 1 second\n// turn off for 1 second\n// pass\nfunction right_signal() {\n    // set front and back lights on right_signal\n    \n}\n\n// while True:\n// turn on for one second\n// turn off for one second\n// pass\nfunction lights_off() {\n    // Turn all lights off\n    \n}\n"],[1,"input.buttonIsPressed(Button.A)\ninput.buttonIsPressed(Button.A)"],[0,"\n"]],"start1":0,"start2":0,"length1":371,"length2":64}]},{"type":"edited","filename":"main.py","patch":[{"diffs":[[0,"signal\n    p"],[-1,"ass"],[0,"\n    "],[-1,"#"],[0,"while True:\n"]],"start1":58,"start2":58,"length1":33,"length2":29},{"diffs":[[0," second\n"],[-1,"    #pass\n"],[0,"\n\ndef ri"]],"start1":132,"start2":132,"length1":26,"length2":16},{"diffs":[[0,"    "],[-1,"pass\n    #"],[0,"whil"]],"start1":209,"start2":209,"length1":18,"length2":8},{"diffs":[[0,"cond"],[-1,"\n    #pass"],[0,"\n\nde"]],"start1":277,"start2":277,"length1":18,"length2":8},{"diffs":[[0,"off\n"],[-1,"    pass\n\n\n#"],[1,"\n\n"],[0,"inpu"]],"start1":322,"start2":322,"length1":20,"length2":10},{"diffs":[[0,", left_signal)\n\n"],[-1,"#"],[1,"    "],[0,"input.button_is_"]],"start1":360,"start2":360,"length1":33,"length2":36},{"diffs":[[0,"s_off)\n\n"],[-1,"#"],[0,"input.bu"]],"start1":419,"start2":419,"length1":17,"length2":16},{"diffs":[[0,"l)\n\n"],[-1,"#"],[1,"    "],[0,"input.bu"],[1,"g"],[0,"tton_is"],[-1,"_"],[1," "],[0,"pres"]],"start1":472,"start2":472,"length1":25,"length2":29}]}]},{"timestamp":1744392524261,"editorVersion":"7.0.61","changes":[{"type":"edited","filename":"main.py","patch":[{"diffs":[[-1,"\n\n\n\n\n\n\n\n\n"],[0,"def "]],"start1":0,"start2":0,"length1":13,"length2":4}]}]},{"timestamp":1744662337573,"editorVersion":"7.0.61","changes":[{"type":"edited","filename":"main.py","patch":[{"diffs":[[-1,"#Turns off all LEDs by grouping them, changing the rgb to 0,0,0\n#You must show your color once it has been set.\nAll_LED = Kitronik_Move_Motor.create_move_motor_zipled(4)\nAll_LED.set_color(Kitronik_Move_Motor.colors(Kitronik_Move_Motor.ZipLedColors.BLACK))\nAll_LED.show()\n\n#LEDs are regrouped into front lights and back lights.\n#The range parameter indicates which LED to start with and the number\n#of consecutive LED's in that group (includeing the first).\nFront_LED = All_LED.range(0, 2)\nBack_LED = All_LED.range(2, 2)\n\n#This will continually run as long as the robot is on.\n#When the light sensor on the microbit reads less than 100, then\n#the front LEDs will turn white and the back LEDs will turn red, otherwise\n#they will turn off.  This is to mimic the automatic lights on a vehicle.\nwhile True:\n    \n    if input.light_level() < 100:\n        \n        Front_LED.set_color(Kitronik_Move_Motor.colors(Kitronik_Move_Motor.ZipLedColors.WHITE))\n        Front_LED.set_brightness(50)\n        Front_LED.show()\n        \n        Back_LED.set_color(Kitronik_Move_Motor.colors(Kitronik_Move_Motor.ZipLedColors.RED))\n        Back_LED.set_brightness(50)\n        Back_LED.show()\n    \n    else:\n        \n        Front_LED.set_color(Kitronik_Move_Motor.colors(Kitronik_Move_Motor.ZipLedColors.BLACK))\n        Front_LED.show()\n        \n        Back_LED.set_color(Kitronik_Move_Motor.colors(Kitronik_Move_Motor.ZipLedColors.BLACK))\n        Back_LED.show()"],[0,"\n\n\n\n"]],"start1":0,"start2":0,"length1":1446,"length2":4}]}]},{"timestamp":1744662339879,"editorVersion":"7.0.61","changes":[{"type":"edited","filename":"main.ts","patch":[{"diffs":[[-1,"// Turns off all LEDs by grouping them, changing the rgb to 0,0,0\n// You must show your color once it has been set.\nlet All_LED = Kitronik_Move_Motor.createMoveMotorZIPLED(4)\nAll_LED.setColor(Kitronik_Move_Motor.colors(Kitronik_Move_Motor.ZipLedColors.Black))\nAll_LED.show()\n// LEDs are regrouped into front lights and back lights.\n// The range parameter indicates which LED to start with and the number\n// of consecutive LED's in that group (includeing the first).\nlet Front_Left_LED = All_LED.range(0, 1)\nlet Front_Right_LED = All_LED.range(1, 1)\nlet Back_Left_LED = All_LED.range(2, 1)\nlet Back_Right_LED = All_LED.range(3, 1)\n// This will continually run as long as the robot is on.\n// When the light sensor on the microbit reads less than 100, then\n// the front LEDs will turn white and the back LEDs will turn red, otherwise\n// they will turn off.  This is to mimic the automatic lights on a vehicle.\n"],[1,"function left_signal() {\n    // set front and back lights on left_signal\n    \n}\n\n// while True:\n// turn on for 1 second\n// turn off for 1 second\n// pass\nfunction right_signal() {\n    // set front and back lights on right_signal\n    \n}\n\n// "],[0,"while "],[-1,"(true) {\n    if (input.lightLevel() < 100) {\n        Front_Left_LED.setColor(Kitronik_Move_Motor.colors(Kitronik_Move_Motor.ZipLedColors.White))\n        Front_Left_LED.setBrightness(50)\n        Front_Left_LED.show()\n        Back_Left_LED.setColor(Kitronik_Move_Motor.colors(Kitronik_Move_Motor.ZipLedColors.Red))\n        Back_Left_LED.setBrightness(50)\n        Back_Left_LED.show()\n    } else {\n        Front_Right_LED.setColor(Kitronik_Move_Motor.colors(Kitronik_Move_Motor.ZipLedColors.White))\n        Front_Right_LED.setBrightness(50)\n        Front_Right_LED.show()\n        Back_Right_LED.setColor(Kitronik_Move_Motor.colors(Kitronik_Move_Motor.ZipLedColors.Red))\n        Back_Right_LED.setBrightness(50)\n        Back_Right_LED.show()\n    }"],[1,"True:\n// turn on for one second\n// turn off for one second\n// pass\nfunction lights_off() {\n    // Turn all lights off"],[0,"\n    \n"],[-1,""],[0,"}\n"],[1,"\n"]],"start1":0,"start2":0,"length1":1664,"length2":371}]},{"type":"edited","filename":"main.py","patch":[{"diffs":[[0,".\nFront_"],[-1,"Left_"],[0,"LED = Al"]],"start1":455,"start2":455,"length1":21,"length2":16},{"diffs":[[0,"(0, "],[-1,"1)\nFront_Right_LED = All_LED.range(,1"],[1,"2"],[0,")\nBack_"],[-1,"Left_"],[0,"LED "]],"start1":482,"start2":482,"length1":57,"length2":16},{"diffs":[[0,"(2, "],[-1,"1)\nBack_Right_LED = All_LED.range(3,1) "],[1,"2)"],[0,"\n\n#T"]],"start1":513,"start2":513,"length1":47,"length2":10},{"diffs":[[0," \n        Front_"],[-1,"Left_"],[0,"LED.set_color(Ki"]],"start1":848,"start2":848,"length1":37,"length2":32},{"diffs":[[0,"      Front_"],[-1,"Left_"],[0,"LED.set_brig"]],"start1":948,"start2":948,"length1":29,"length2":24},{"diffs":[[0,"  Front_"],[-1,"Left_"],[0,"LED.show"]],"start1":989,"start2":989,"length1":21,"length2":16},{"diffs":[[0,"  \n        Back_"],[-1,"Left_"],[0,"LED.set_color(Ki"]],"start1":1014,"start2":1014,"length1":37,"length2":32},{"diffs":[[0,"       Back_"],[-1,"Left_"],[0,"LED.set_brig"]],"start1":1111,"start2":1111,"length1":29,"length2":24},{"diffs":[[0,"ack_"],[-1,"Left_"],[0,"LED."]],"start1":1155,"start2":1155,"length1":13,"length2":8},{"diffs":[[0,"se:\n        "],[-1,"Front_Righ"],[1,"\n        Fron"],[0,"t_LED.set_co"]],"start1":1181,"start2":1181,"length1":34,"length2":37},{"diffs":[[0,"or.ZipLedColors."],[-1,"WHITE"],[1,"BLACK"],[0,"))\n        Front"]],"start1":1266,"start2":1266,"length1":37,"length2":37},{"diffs":[[0,"ont_"],[-1,"Right_LED.set_brightness(50)\n        Front_Right_LED.show()\n                "],[1,"LED.show()\n"],[0,"    "]],"start1":1300,"start2":1300,"length1":84,"length2":19},{"diffs":[[0,"  \n        Back_"],[-1,"Right_"],[0,"LED.set_color(Ki"]],"start1":1321,"start2":1321,"length1":38,"length2":32},{"diffs":[[0,"or.ZipLedColors."],[-1,"RED"],[1,"BLACK"],[0,"))\n        Back_"]],"start1":1395,"start2":1395,"length1":35,"length2":37},{"diffs":[[0,"ack_"],[-1,"Right_LED.set_brightness(50)\n        Back_Right_LED.show()\n\n"],[1,"LED.show()\n\n\n\n\n\n\n\n\ndef left_signal():\n    #set front and back lights on left_signal\n    pass\n    #while True:\n    #turn on for 1 second\n    #turn off for 1 second\n    #pass\n\n\ndef right_signal():\n    #set front and back lights on right_signal\n    pass\n    #while True:\n    #turn on for one second\n    #turn off for one second\n    #pass\n\ndef lights_off():\n    #Turn all lights off\n    pass\n\n\n#input.button_is_pressed(Button.A, left_signal)\n\n#input.button_is_pressed(Button.A, lights_off)\n\n#input.button_is_pressed(Button.B, right_signal)\n\n#input.button_is_pressed(Button.B, lights_off)"],[0,"\n"]],"start1":1428,"start2":1428,"length1":65,"length2":588}]}]},{"timestamp":1744662936250,"editorVersion":"7.0.61","changes":[{"type":"edited","filename":"main.ts","patch":[{"diffs":[[0,"nge("],[-1,"3"],[1,"2"],[0,", 1)"]],"start1":579,"start2":579,"length1":9,"length2":9},{"diffs":[[0,"nge("],[-1,"2"],[1,"3"],[0,", 1)\n"],[-1,"function Front_Left_Flash() {\n    Front_Left_LED.setColor(Kitronik_Move_Motor.colors(Kitronik_Move_Motor.ZipLedColors.White))\n    Front_Left_LED.setBrightness(50)\n    Front_Left_LED.show()\n    pause(1000)\n    Front_Left_LED.setColor(Kitronik_Move_Motor.colors(Kitronik_Move_Motor.ZipLedColors.Black))\n    Front_Left_LED.show()\n    pause(1000)\n}\n\nfunction Front_Right_Flash() {\n"],[1,"// This will continually run as long as the robot is on.\n// When the light sensor on the microbit reads less than 100, then\n// the front LEDs will turn white and the back LEDs will turn red, otherwise\n// they will turn off.  This is to mimic the automatic lights on a vehicle.\nwhile (true) {\n    if (input.lightLevel() < 100) {\n    "],[0,"    "]],"start1":620,"start2":620,"length1":391,"length2":346},{"diffs":[[0,"{\n        Front_"],[-1,"Righ"],[1,"Lef"],[0,"t_LED.setColor(K"]],"start1":956,"start2":956,"length1":36,"length2":35},{"diffs":[[0,"White))\n"],[1,"    "],[0,"    Fron"]],"start1":1050,"start2":1050,"length1":16,"length2":20},{"diffs":[[0,")\n        Front_"],[-1,"Righ"],[1,"Lef"],[0,"t_LED.setBrightn"]],"start1":1056,"start2":1056,"length1":36,"length2":35},{"diffs":[[0,"    "],[-1,"Front_Right_LED.show()\n    pause(1000)\n    Front_Right_LED.setColor(Kitronik_Move_Motor.colors(Kitronik_Move_Motor.ZipLedColors.Black))\n    Front_Right_LED.show()\n    pause(1000)\n}\n\nfunction Back_Left_Flash() {\n"],[1,"    Front_Left_LED.show()\n    "],[0,"    "]],"start1":1099,"start2":1099,"length1":219,"length2":38},{"diffs":[[0,"LedColors.Red))\n"],[1,"    "],[0,"    Back_Left_LE"]],"start1":1210,"start2":1210,"length1":32,"length2":36},{"diffs":[[0,"tBrightness(50)\n"],[1,"    "],[0,"    Back_Left_LE"]],"start1":1250,"start2":1250,"length1":32,"length2":36},{"diffs":[[0,"    "],[-1,"pause(1000)\n    Back_Lef"],[1,"} else {\n        Front_Righ"],[0,"t_LE"]],"start1":1295,"start2":1295,"length1":32,"length2":35},{"diffs":[[0,"ors."],[-1,"Black"],[1,"White"],[0,"))\n    "],[1," "],[-1,"Back_Left_LED.show()\n    pause(1000)\n}\n\nfunction Back_Right_Flash() {\n"],[1,"   Front_Right_LED.setBrightness(50)\n        Front_Right_LED.show()\n    "],[0,"    "]],"start1":1397,"start2":1397,"length1":90,"length2":93},{"diffs":[[0,"olors.Red))\n"],[1,"    "],[0,"    Back_Rig"]],"start1":1568,"start2":1568,"length1":24,"length2":28},{"diffs":[[0,"    "],[-1,"Back_Right_LED.show()\n    pause(1000)\n    Back_Right_LED.setColor(Kitronik_Move_Motor.colors(Kitronik_Move_Motor.ZipLedColors.Black))\n    Back_Right_LED.show()\n    pause(1000)"],[1,"    Back_Right_LED.show()\n    }\n    "],[0,"\n}\n"],[-1,"\n"]],"start1":1621,"start2":1621,"length1":183,"length2":43}]},{"type":"edited","filename":"main.py","patch":[{"diffs":[[0,"D.range("],[-1,"1"],[0,",1)\nBack"]],"start1":518,"start2":518,"length1":17,"length2":16},{"diffs":[[0,"nge("],[-1,"3"],[1,"2"],[0,", 1)"]],"start1":556,"start2":556,"length1":9,"length2":9},{"diffs":[[0,"nge("],[-1,"2"],[1,"3"],[0,",1) \n\n"],[-1,"def Front_Left_Flash():\n    Front_Left_LED.set_color(Kitronik_Move_Motor.colors(Kitronik_Move_Motor.ZipLedColors.WHITE))\n    Front_Left_LED.set_brightness(50)\n    Front_Left_LED.show()\n    pause(1000)\n    Front_Left_LED.set_color(Kitronik_Move_Motor.colors(Kitronik_Move_Motor.ZipLedColors.BLACK))\n    Front_Left_LED.show()\n    pause(1000)\n\ndef Front_Right_Flash():\n"],[1,"#This will continually run as long as the robot is on.\n#When the light sensor on the microbit reads less than 100, then\n#the front LEDs will turn white and the back LEDs will turn red, otherwise\n#they will turn off.  This is to mimic the automatic lights on a vehicle.\nwhile True:\n    \n    if input.light_level() < 100:\n        \n    "],[0,"    "]],"start1":593,"start2":593,"length1":381,"length2":348},{"diffs":[[0," \n        Front_"],[-1,"Righ"],[1,"Lef"],[0,"t_LED.set_color("]],"start1":931,"start2":931,"length1":36,"length2":35},{"diffs":[[0,"WHITE))\n"],[1,"    "],[0,"    Fron"]],"start1":1026,"start2":1026,"length1":16,"length2":20},{"diffs":[[0,")\n        Front_"],[-1,"Righ"],[1,"Lef"],[0,"t_LED.set_bright"]],"start1":1032,"start2":1032,"length1":36,"length2":35},{"diffs":[[0,"ess(50)\n    "],[1," "],[1,"   "],[0,"Front_"],[-1,"Righ"],[1,"Lef"],[0,"t_LED.show()"]],"start1":1068,"start2":1068,"length1":34,"length2":37},{"diffs":[[0,"    "],[-1,"pause(1000)\n    Front_Right_LED.set_color(Kitronik_Move_Motor.colors(Kitronik_Move_Motor.ZipLedColors.BLACK))\n    Front_Right_LED.show()\n    pause(1000)\n\ndef Back_Left_Flash():\n"],[1,"    \n    "],[0,"    "]],"start1":1106,"start2":1106,"length1":185,"length2":17},{"diffs":[[0,"LedColors.RED))\n"],[1,"    "],[0,"    Back_Left_LE"]],"start1":1197,"start2":1197,"length1":32,"length2":36},{"diffs":[[0,"_brightness(50)\n"],[1,"    "],[0,"    Back_Left_LE"]],"start1":1238,"start2":1238,"length1":32,"length2":36},{"diffs":[[0,"    "],[-1,"pause(1000)\n    Back_Left_LED.set_color(Kitronik_Move_Motor.colors(Kitronik_Move_Motor.ZipLedColors.BLACK))\n    Back_Left_LED.show()\n    pause(1000)\n\ndef Back_Right_Flash():\n    Back"],[1,"\n    else:\n        Front"],[0,"_Rig"]],"start1":1283,"start2":1283,"length1":190,"length2":32},{"diffs":[[0,"ors."],[-1,"RED"],[1,"WHITE"],[0,"))\n    "],[-1,"Back"],[1,"    Front"],[0,"_Rig"]],"start1":1388,"start2":1388,"length1":22,"length2":29},{"diffs":[[0,"ess(50)\n    "],[-1,"Back"],[1,"    Front"],[0,"_Right_LED.s"]],"start1":1435,"start2":1435,"length1":28,"length2":33},{"diffs":[[0,"w()\n    "],[-1,"pause(1000)\n"],[1,"                    \n    "],[0,"    Back"]],"start1":1470,"start2":1470,"length1":28,"length2":41},{"diffs":[[0,"dColors."],[-1,"BLACK))\n"],[1,"RED))\n    "],[0,"    Back"]],"start1":1584,"start2":1584,"length1":24,"length2":26},{"diffs":[[0,"ED.s"],[-1,"how()\n    pause(1000)\n\n\ninput.button_is_pressed(Button.A, left_signal)\n    white Tr\n\n#input.button_is_pressed(Button.A, lights_off)\n\n#input.button_is_pressed(Button.B, right_signal)\n\n#input.button_is_pressed(Button.B, lights_off)\n"],[1,"et_brightness(50)\n        Back_Right_LED.show()"],[0,"\n\n\n"]],"start1":1618,"start2":1618,"length1":237,"length2":54}]}]},{"timestamp":1744663533531,"editorVersion":"7.0.61","changes":[{"type":"edited","filename":"main.ts","patch":[{"diffs":[[0,"ion "],[-1,"Left_Signal() {\n    pause(100)\n    while (!input.buttonIsPressed(Button.A)) {\n    "],[1,"Front_Left_Flash() {\n"],[0,"    "]],"start1":635,"start2":635,"length1":90,"length2":29},{"diffs":[[0,"dColors.White))\n"],[-1,"    "],[0,"    Front_Left_L"]],"start1":740,"start2":740,"length1":36,"length2":32},{"diffs":[[0,"ess(50)\n    "],[-1,"   "],[-1," "],[0,"Front_Left_L"]],"start1":785,"start2":785,"length1":28,"length2":24},{"diffs":[[0,"Left_LED.show()\n"],[-1,"    "],[0,"    pause(1000)\n"]],"start1":803,"start2":803,"length1":36,"length2":32},{"diffs":[[0,"e(1000)\n    "],[-1," "],[-1,"   "],[0,"Front_Left_L"]],"start1":827,"start2":827,"length1":28,"length2":24},{"diffs":[[0,"dColors.Black))\n"],[-1,"    "],[0,"    Front_Left_L"]],"start1":915,"start2":915,"length1":36,"length2":32},{"diffs":[[0,".show()\n    "],[-1,"    Back_Lef"],[1,"pause(1000)\n}\n\nfunction Front_Right_Flash() {\n    Front_Righ"],[0,"t_LED.setCol"]],"start1":949,"start2":949,"length1":36,"length2":84},{"diffs":[[0,"ors."],[-1,"Red))\n        Back_Lef"],[1,"White))\n    Front_Righ"],[0,"t_LE"]],"start1":1092,"start2":1092,"length1":30,"length2":30},{"diffs":[[0,"ess(50)\n    "],[-1,"    Back_Lef"],[1,"Front_Righ"],[0,"t_LED.show()"]],"start1":1134,"start2":1134,"length1":36,"length2":34},{"diffs":[[0,"ight_LED.show()\n"],[-1,"    "],[0,"    pause(1000)\n"]],"start1":1153,"start2":1153,"length1":36,"length2":32},{"diffs":[[0,"e(1000)\n    "],[-1,"    Back_Lef"],[1,"Front_Righ"],[0,"t_LED.setCol"]],"start1":1177,"start2":1177,"length1":36,"length2":34},{"diffs":[[0,"    "],[-1,"    Back_Lef"],[1,"Front_Righ"],[0,"t_LE"]],"start1":1282,"start2":1282,"length1":20,"length2":18},{"diffs":[[0,".show()\n    "],[-1,"}"],[1,"pause(1000)"],[0,"\n}\n\nfunction"]],"start1":1301,"start2":1301,"length1":25,"length2":35},{"diffs":[[0,"ion "],[-1,"Right_Signal() {\n    pause(100)\n    while (!input.buttonIsPressed(Button.B)) {\n        Front_Righ"],[1,"Back_Left_Flash() {\n    Back_Lef"],[0,"t_LE"]],"start1":1333,"start2":1333,"length1":105,"length2":40},{"diffs":[[0,"ors."],[-1,"White"],[1,"Red"],[0,"))\n    "],[-1," "],[-1,"   Front_Righ"],[1,"Back_Lef"],[0,"t_LE"]],"start1":1440,"start2":1440,"length1":34,"length2":26},{"diffs":[[0,"ess(50)\n    "],[-1,"    Front_Righ"],[1,"Back_Lef"],[0,"t_LED.show()"]],"start1":1478,"start2":1478,"length1":38,"length2":32},{"diffs":[[0,"Left_LED.show()\n"],[-1,"    "],[0,"    pause(1000)\n"]],"start1":1495,"start2":1495,"length1":36,"length2":32},{"diffs":[[0,"e(1000)\n    "],[-1,"    Front_Righ"],[1,"Back_Lef"],[0,"t_LED.setCol"]],"start1":1519,"start2":1519,"length1":38,"length2":32},{"diffs":[[0,"    "],[-1,"    Front_Right_LED.show()\n "],[1,"Back_Left_LED.show()\n    pause(1000)\n}\n\nfunction Back_Right_Flash() {\n"],[0,"    "],[-1,"   "],[0,"Back"]],"start1":1622,"start2":1622,"length1":43,"length2":82},{"diffs":[[0,"s.Red))\n"],[-1,"    "],[0,"    Back"]],"start1":1782,"start2":1782,"length1":20,"length2":16},{"diffs":[[0,"ess(50)\n"],[-1,"    "],[0,"    Back"]],"start1":1819,"start2":1819,"length1":20,"length2":16},{"diffs":[[0,".show()\n"],[-1,"    "],[0,"    paus"]],"start1":1845,"start2":1845,"length1":20,"length2":16},{"diffs":[[0,"e(1000)\n    "],[-1,"   "],[-1," "],[0,"Back_Right_L"]],"start1":1861,"start2":1861,"length1":28,"length2":24},{"diffs":[[0,"Black))\n"],[-1,"    "],[0,"    Back"]],"start1":1957,"start2":1957,"length1":20,"length2":16},{"diffs":[[0,"    "],[-1,"}\n}\n\nLeft_Signal()\ninput.buttonIsPressed"],[1,"pause(1000)\n}\n"],[0,"\n"]],"start1":1991,"start2":1991,"length1":45,"length2":19}]},{"type":"edited","filename":"main.py","patch":[{"diffs":[[0,"def "],[-1,"Left_Signal():\n    pause(100)\n    while not (input.button_is_pressed(Button.A)):\n    "],[1,"Front_Left_Flash():\n"],[0,"    "]],"start1":605,"start2":605,"length1":93,"length2":28},{"diffs":[[0,"dColors.WHITE))\n"],[-1,"    "],[0,"    Front_Left_L"]],"start1":710,"start2":710,"length1":36,"length2":32},{"diffs":[[0,"_brightness(50)\n"],[-1,"    "],[0,"    Front_Left_L"]],"start1":748,"start2":748,"length1":36,"length2":32},{"diffs":[[0,"Left_LED.show()\n"],[-1,"    "],[0,"    pause(1000)\n"]],"start1":774,"start2":774,"length1":36,"length2":32},{"diffs":[[0,"    pause(1000)\n"],[-1,"    "],[0,"    Front_Left_L"]],"start1":790,"start2":790,"length1":36,"length2":32},{"diffs":[[0,"dColors.BLACK))\n"],[-1,"    "],[0,"    Front_Left_L"]],"start1":887,"start2":887,"length1":36,"length2":32},{"diffs":[[0,".show()\n    "],[-1,"    Back_Lef"],[1,"pause(1000)\n\ndef Front_Right_Flash():\n    Front_Righ"],[0,"t_LED.set_co"]],"start1":921,"start2":921,"length1":36,"length2":76},{"diffs":[[0,"ors."],[-1,"RED"],[1,"WHITE"],[0,"))\n    "],[-1,"    Back_Lef"],[1,"Front_Righ"],[0,"t_LE"]],"start1":1057,"start2":1057,"length1":30,"length2":30},{"diffs":[[0,"ess(50)\n    "],[-1,"    Back_Lef"],[1,"Front_Righ"],[0,"t_LED.show()"]],"start1":1100,"start2":1100,"length1":36,"length2":34},{"diffs":[[0,"ight_LED.show()\n"],[-1,"    "],[0,"    pause(1000)\n"]],"start1":1119,"start2":1119,"length1":36,"length2":32},{"diffs":[[0,"e(1000)\n    "],[-1,"    Back_Lef"],[1,"Front_Righ"],[0,"t_LED.set_co"]],"start1":1143,"start2":1143,"length1":36,"length2":34},{"diffs":[[0,"    "],[-1,"    Back_Lef"],[1,"Front_Righ"],[0,"t_LE"]],"start1":1249,"start2":1249,"length1":20,"length2":18},{"diffs":[[0,"w()\n"],[-1,"\n\ndef Right_Signal():\n"],[0,"    "]],"start1":1272,"start2":1272,"length1":30,"length2":8},{"diffs":[[0,"(100"],[1,"0"],[0,")\n"],[-1,"    while not (input.button_is_pressed(Button.B)):\n        Front_Righ"],[1,"\ndef Back_Left_Flash():\n    Back_Lef"],[0,"t_LE"]],"start1":1285,"start2":1285,"length1":79,"length2":47},{"diffs":[[0,"ors."],[-1,"WHITE"],[1,"RED"],[0,"))\n    "],[-1,"    Front_Righ"],[1,"Back_Lef"],[0,"t_LE"]],"start1":1400,"start2":1400,"length1":34,"length2":26},{"diffs":[[0,"ess(50)\n    "],[-1,"    Front_Righ"],[1,"Back_Lef"],[0,"t_LED.show()"]],"start1":1439,"start2":1439,"length1":38,"length2":32},{"diffs":[[0,"_LED.show()\n    "],[-1,"  "],[-1,"  "],[0,"pause(1000)\n    "]],"start1":1460,"start2":1460,"length1":36,"length2":32},{"diffs":[[0,"e(1000)\n    "],[-1,"  "],[-1,"  Front_Righ"],[1,"Back_Lef"],[0,"t_LED.set_co"]],"start1":1480,"start2":1480,"length1":38,"length2":32},{"diffs":[[0,"K))\n    "],[-1,"    Front_Righ"],[1,"Back_Lef"],[0,"t_LED.sh"]],"start1":1580,"start2":1580,"length1":30,"length2":24},{"diffs":[[0,".show()\n    "],[1,"pause(1000)\n\ndef Back_Right_Flash():\n"],[0,"    Back_Rig"]],"start1":1601,"start2":1601,"length1":24,"length2":61},{"diffs":[[0,"s.RED))\n"],[-1,"    "],[0,"    Back"]],"start1":1737,"start2":1737,"length1":20,"length2":16},{"diffs":[[0,"ess(50)\n"],[-1,"    "],[0,"    Back"]],"start1":1775,"start2":1775,"length1":20,"length2":16},{"diffs":[[0,"w()\n    "],[-1,"   "],[-1," "],[0,"pause(10"]],"start1":1805,"start2":1805,"length1":20,"length2":16},{"diffs":[[0,"e(1000)\n"],[-1,"    "],[0,"    Back"]],"start1":1817,"start2":1817,"length1":20,"length2":16},{"diffs":[[0,"BLACK))\n"],[-1,"    "],[0,"    Back"]],"start1":1914,"start2":1914,"length1":20,"length2":16},{"diffs":[[0,"w()\n"],[-1,"\nLeft_Signal()"],[1,"    pause(1000)\n"],[0,"\n\nin"]],"start1":1944,"start2":1944,"length1":22,"length2":24},{"diffs":[[0,"pressed("],[-1,")"],[1,"Button.A, left_signal)\n    white Tr\n"],[0,"\n#input."]],"start1":1982,"start2":1982,"length1":17,"length2":52}]}]},{"timestamp":1744664115645,"editorVersion":"7.0.61","changes":[{"type":"edited","filename":"main.ts","patch":[{"diffs":[[0," while ("],[1,"!"],[0,"input.bu"]],"start1":673,"start2":673,"length1":16,"length2":17},{"diffs":[[0,"ton."],[-1,"B) == false"],[1,"A)"],[0,") {\n"]],"start1":707,"start2":707,"length1":19,"length2":10},{"diffs":[[0,"ignal()\n"],[1,"input.buttonIsPressed\n"]],"start1":2109,"start2":2109,"length1":8,"length2":30}]},{"type":"edited","filename":"main.py","patch":[{"diffs":[[0,"  while "],[1,"not "],[0,"(input.b"]],"start1":641,"start2":641,"length1":16,"length2":20},{"diffs":[[0,"ton."],[-1,"B)==False"],[1,"A)"],[0,"):\n "]],"start1":681,"start2":681,"length1":17,"length2":10},{"diffs":[[0,"w()\n"],[-1,"        \n"],[0,"\n\nde"]],"start1":1327,"start2":1327,"length1":17,"length2":8},{"diffs":[[0,"(Button."],[1,"B"],[0,")):\n    "]],"start1":1406,"start2":1406,"length1":16,"length2":17},{"diffs":[[0,"gnal()\n\n"],[-1,"#"],[0,"input.bu"]],"start1":2078,"start2":2078,"length1":17,"length2":16},{"diffs":[[0,"sed("],[-1,"Button.A, Left_Signal"],[0,")\n#i"]],"start1":2106,"start2":2106,"length1":29,"length2":8}]}]},{"timestamp":1744664714349,"editorVersion":"7.0.61","changes":[{"type":"edited","filename":"main.ts","patch":[{"diffs":[[0,"sPressed(Button."],[-1,"A"],[0,"B) == false) {\n "]],"start1":694,"start2":694,"length1":33,"length2":32},{"diffs":[[0,".B) == false) {\n"],[1,""],[0,"        Front_Le"]],"start1":709,"start2":709,"length1":32,"length2":32},{"diffs":[[0,"100)\n    while ("],[1,"!"],[0,"input.buttonIsPr"]],"start1":1405,"start2":1405,"length1":32,"length2":33},{"diffs":[[0,"ton."],[-1,"A"],[0,"B)"],[-1," == false"],[0,") {\n"]],"start1":1447,"start2":1447,"length1":20,"length2":10},{"diffs":[[0,"\n}\n\n"],[-1,"function main() {\n    while (true) {\n        if (input.buttonIsPressed(Button.B) == true) {\n            Left_Signal()\n        }\n        \n        if (input.buttonIsPressed(Button.A) == true) {\n            Right_Signal()\n        }\n        \n    }\n}\n\nmain"],[1,"Left_Signal"],[0,"()\n"]],"start1":2107,"start2":2107,"length1":258,"length2":18}]},{"type":"edited","filename":"main.py","patch":[{"diffs":[[0,"(Button."],[-1,"A"],[0,"B)==Fals"]],"start1":673,"start2":673,"length1":17,"length2":16},{"diffs":[[0,"00)\n"],[-1,"\n        Front_Rion"],[1,"    while not (input.button_is_pressed(Button.)):\n        Front_Right_LED.set_color(Kitronik_Move_Motor.colors(Kitronik_Move_Motor.ZipLedColors.WHITE))\n        Front_Right_LED.set_brightness(50)\n        Front_Right_LED.show()\n        pause(1000)\n "],[0,"    "]],"start1":1376,"start2":1376,"length1":27,"length2":255},{"diffs":[[0,"()\n\n"],[-1,"\ndef main():\n    while True:\n        if "],[1,"Left_Signal()\n\n#"],[0,"inpu"]],"start1":2078,"start2":2078,"length1":48,"length2":24},{"diffs":[[0,"ton."],[-1,"B)==True:\n           "],[1,"A,"],[0," Lef"]],"start1":2125,"start2":2125,"length1":29,"length2":10},{"diffs":[[0,"gnal"],[-1,"("],[0,")\n"],[-1,"        if "],[1,"#"],[0,"inpu"]],"start1":2139,"start2":2139,"length1":22,"length2":11},{"diffs":[[0,"on.A"],[-1,")==True:\n            Right_Signal()\n\nmain("],[1,", lights_off"],[0,")\n\n#"]],"start1":2174,"start2":2174,"length1":50,"length2":20},{"diffs":[[0,".B, "],[-1,"Left_S"],[1,"right_s"],[0,"ignal)\n\n"],[-1,"\n"],[0,"#inp"]],"start1":2224,"start2":2224,"length1":23,"length2":23},{"diffs":[[0,"ton."],[-1,"A, R"],[1,"B, l"],[0,"ight"],[-1,"_Signal)\n\n"],[1,"s_off)"],[0,"\n\n\n\n"]],"start1":2271,"start2":2271,"length1":26,"length2":22}]}]},{"timestamp":1744665313421,"editorVersion":"7.0.61","changes":[{"type":"edited","filename":"main.ts","patch":[{"diffs":[[0,"   while (input."],[-1,"logo"],[1,"button"],[0,"IsPressed() == f"]],"start1":671,"start2":671,"length1":36,"length2":38},{"diffs":[[0,"buttonIsPressed("],[1,"Button.AB"],[0,") == false) {\n  "]],"start1":687,"start2":687,"length1":32,"length2":41},{"diffs":[[0,"put."],[-1,"logo"],[1,"button"],[0,"IsPr"]],"start1":1424,"start2":1424,"length1":12,"length2":14},{"diffs":[[0,"Pressed("],[1,"Button.AB"],[0,") == fal"]],"start1":1436,"start2":1436,"length1":16,"length2":25}]},{"type":"edited","filename":"main.py","patch":[{"diffs":[[0,"   while (input."],[-1,"logo"],[1,"button"],[0,"_is_pressed() =="]],"start1":640,"start2":640,"length1":36,"length2":38},{"diffs":[[0,"tton_is_pressed("],[1,"Button.AB"],[0,")"],[-1," "],[0,"==False):\n      "]],"start1":658,"start2":658,"length1":34,"length2":42},{"diffs":[[0,"00)\n"],[-1,"    while (input.logo_is_pressed() ==False): \n        Front_Right_LED.set_color(Kitronik_Move_Motor.colors(Kitronik_Move_Motor.ZipLedColors.WHITE))\n        Front_Right_LED.set_brightness(50)\n        Front_Right_LED.show()\n        pause(1000)\n "],[1,"\n        Front_Rion"],[0,"    "]],"start1":1377,"start2":1377,"length1":251,"length2":27},{"diffs":[[0,"pressed("],[1,"Button.B, Left_S"],[0,"ignal"],[1,")\n\n\n"],[0,"#input.b"]],"start1":2067,"start2":2067,"length1":21,"length2":41},{"diffs":[[0,"nal)\n\n\n\n"],[-1,"        "],[1,"\n\n"]],"start1":2144,"start2":2144,"length1":16,"length2":10}]}]},{"timestamp":1744665827706,"editorVersion":"7.0.61","changes":[{"type":"edited","filename":"main.py","patch":[{"diffs":[[0,"main()\n\n"],[1,"#input.button_is_pressed(ignal#input.button_is_pressed(Button.A, Right_Signal)\n"],[0,"\n\n\n     "]],"start1":2256,"start2":2256,"length1":16,"length2":95}]}]},{"timestamp":1744666002376,"editorVersion":"7.0.61","changes":[{"type":"edited","filename":"main.py","patch":[{"diffs":[[0,"  pause("],[1,"1000"],[0,")\n      "]],"start1":863,"start2":863,"length1":16,"length2":20}]}]},{"timestamp":1744731890738,"editorVersion":"7.0.61","changes":[{"type":"edited","filename":"main.py","patch":[{"diffs":[[0,"  pause("],[-1,"50"],[0,")\n      "]],"start1":863,"start2":863,"length1":18,"length2":16}]}]},{"timestamp":1744731890996,"editorVersion":"7.0.61","changes":[{"type":"edited","filename":"main.ts","patch":[{"diffs":[[0," 1)\n"],[-1,"// When called, this function turns on the left signal by turning on the front left light to \n// white and then turning it off while simultaneously turning on the back left light to red and repeating\n// until the Microbit logo is touched.  Speed of the signal can be adjusted within the functions parameter.\n"],[0,"func"]],"start1":626,"start2":626,"length1":316,"length2":8},{"diffs":[[0,"Left_Signal("],[-1,"speed: number"],[0,") {\n    paus"]],"start1":639,"start2":639,"length1":37,"length2":24},{"diffs":[[0,")\n        pause("],[-1,"speed"],[1,"1000"],[0,")\n        Front_"]],"start1":884,"start2":884,"length1":37,"length2":36},{"diffs":[[0,")\n        pause("],[-1,"speed"],[1,"1000"],[0,")\n        Back_L"]],"start1":1200,"start2":1200,"length1":37,"length2":36},{"diffs":[[0,"\n}\n\n"],[-1,"// When called, this function turns on the right signal by turning on the front left right to \n// white and then turning it off while simultaneously turning on the back right light to red and repeating\n// until the Microbit logo is touched.  Speed of the signal can be adjusted within the functions parameter.\n"],[0,"func"]],"start1":1355,"start2":1355,"length1":318,"length2":8},{"diffs":[[0,"nal("],[-1,"speed: number"],[0,") {\n"]],"start1":1377,"start2":1377,"length1":21,"length2":8},{"diffs":[[0,")\n        pause("],[-1,"speed"],[1,"1000"],[0,")\n        Front_"]],"start1":1617,"start2":1617,"length1":37,"length2":36},{"diffs":[[0,"use("],[-1,"speed"],[1,"1000"],[0,")\n  "]],"start1":1950,"start2":1950,"length1":13,"length2":12},{"diffs":[[0,"\n}\n\n"],[-1,"// When the a button is pressed, the right signal will turn on.\n// When the b button is pressed, the right signal will turn on.\n// To turn off either signal, touch the Microbit logo.\n"],[0,"func"]],"start1":2095,"start2":2095,"length1":191,"length2":8},{"diffs":[[0,"    Left_Signal("],[-1,"500"],[0,")\n        }\n    "]],"start1":2199,"start2":2199,"length1":35,"length2":32},{"diffs":[[0,"n.A) == true) {\n"],[1,""],[0,"            Righ"]],"start1":2275,"start2":2275,"length1":32,"length2":32},{"diffs":[[0,"nal("],[-1,"500"],[0,")\n  "]],"start1":2312,"start2":2312,"length1":11,"length2":8}]},{"type":"edited","filename":"main.py","patch":[{"diffs":[[0,") \n\n"],[-1,"\n#When called, this function turns on the left signal by turning on the front left light to \n#white and then turning it off while simultaneously turning on the back left light to red and repeating\n#until the Microbit logo is touched.  Speed of the signal can be adjusted within the functions parameter.\n"],[0,"def "]],"start1":601,"start2":601,"length1":311,"length2":8},{"diffs":[[0,"def Left_Signal("],[-1,"speed"],[0,"):\n    pause(100"]],"start1":605,"start2":605,"length1":37,"length2":32},{"diffs":[[0,")\n        pause("],[-1,"speed"],[1,"50"],[0,")\n        Front_"]],"start1":855,"start2":855,"length1":37,"length2":34},{"diffs":[[0,")\n        pause("],[-1,"speed"],[1,"1000"],[0,")\n        Back_L"]],"start1":1172,"start2":1172,"length1":37,"length2":36},{"diffs":[[0,"   \n"],[-1,"        \n#When called, this function turns on the right signal by turning on the front left right to \n#white and then turning it off while simultaneously turning on the back right light to red and repeating\n#until the Microbit logo is touched.  Speed of the signal can be adjusted within the functions parameter."],[1,"\n"],[0,"\ndef"]],"start1":1328,"start2":1328,"length1":320,"length2":9},{"diffs":[[0,"_Signal("],[-1,"speed"],[0,"):\n    p"]],"start1":1343,"start2":1343,"length1":21,"length2":16},{"diffs":[[0,")\n        pause("],[-1,"speed"],[1,"1000"],[0,")\n        Front_"]],"start1":1589,"start2":1589,"length1":37,"length2":36},{"diffs":[[0,"use("],[-1,"speed"],[1,"1000"],[0,")\n  "]],"start1":1925,"start2":1925,"length1":13,"length2":12},{"diffs":[[0,"()\n\n"],[-1,"#When the a button is pressed, the right signal will turn on.\n#When the b button is pressed, the right signal will turn on.\n#To turn off either signal, touch the Microbit logo."],[0,"\n"],[1,""],[0,"def "]],"start1":2063,"start2":2063,"length1":185,"length2":9},{"diffs":[[0,"_Signal("],[-1,"500"],[0,")\n      "]],"start1":2164,"start2":2164,"length1":19,"length2":16},{"diffs":[[0,"utton.A)==True:\n"],[1,""],[0,"            Righ"]],"start1":2210,"start2":2210,"length1":32,"length2":32},{"diffs":[[0,"nal("],[-1,"500"],[0,")\n\nm"]],"start1":2247,"start2":2247,"length1":11,"length2":8}]}]},{"timestamp":1744732419672,"editorVersion":"7.0.61","changes":[{"type":"edited","filename":"main.blocks","patch":[{"diffs":[[0,"art\""],[-1," id=\"CMD]|f^f#zE/vAF*a+Ze\""],[0," x=\""]],"start1":100,"start2":100,"length1":34,"length2":8},{"diffs":[[0,"ver\""],[-1," id=\"NxFPrCS[5KjyNoaC%WE~\""],[0," x=\""]],"start1":151,"start2":151,"length1":34,"length2":8}]},{"type":"edited","filename":"pxt.json","patch":[{"diffs":[[0," ],\n"],[-1,"    \"testFiles\": [\n        \"test.ts\"\n    ],\n"],[0,"    "]],"start1":349,"start2":349,"length1":52,"length2":8}]},{"type":"added","filename":"test.ts","value":"// tests go here; this will not be compiled when this package is used as an extension.\n"}]}],"snapshots":[{"timestamp":1744319598466,"editorVersion":"7.0.61","text":{"main.blocks":"<xml xmlns=\"http://www.w3.org/1999/xhtml\">\n  <block type=\"pxt-on-start\"></block>\n  <block type=\"device_forever\"></block>\n</xml>","main.ts":"\n","README.md":"","pxt.json":"{\n    \"name\": \"Kitronik Signal Lights\",\n    \"description\": \"\",\n    \"dependencies\": {\n        \"core\": \"*\",\n        \"radio\": \"*\",\n        \"microphone\": \"*\"\n    },\n    \"files\": [\n        \"main.blocks\",\n        \"main.ts\",\n        \"README.md\"\n    ],\n    \"additionalFilePaths\": []\n}\n"}},{"timestamp":1744391998655,"editorVersion":"7.0.61","text":{"main.blocks":"<xml xmlns=\"https://developers.google.com/blockly/xml\"><variables></variables><block type=\"pxt-on-start\" x=\"20\" y=\"20\"></block><block type=\"device_forever\" x=\"225\" y=\"20\"></block></xml>","main.ts":"","README.md":"","main.py":"def left_signal():\n    #set front and back lights on left_signal\n    while True:\n    #turn on for 1 second\n    #turn off for 1 second\n\n\ndef right_signal():\n    #set front and back lights on right_signal\n    while True:\n    #turn on for one second\n    #turn off for one second\n\ndef lights_off():\n    #Turn all lights off\n\n\ninput.button_is_pressed(Button.A, left_signal)\n\n    input.button_is_pressed(Button.A, lights_off)\n\ninput.button_is_pressed(Button.B, right_signal)\n\n    input.bugtton_is pressed(Button.B, lights_off)\n","pxt.json":"{\n    \"name\": \"Kitronik Signal Lights\",\n    \"description\": \"\",\n    \"dependencies\": {\n        \"core\": \"*\",\n        \"radio\": \"*\",\n        \"microphone\": \"*\",\n        \"pxt-kitronik-move-motor\": \"github:kitronikltd/pxt-kitronik-move-motor#v0.4.20\"\n    },\n    \"files\": [\n        \"main.blocks\",\n        \"main.ts\",\n        \"README.md\",\n        \"main.py\"\n    ],\n    \"preferredEditor\": \"pyprj\"\n}\n"}},{"timestamp":1744662337573,"editorVersion":"7.0.61","text":{"main.blocks":"<xml xmlns=\"https://developers.google.com/blockly/xml\"><variables></variables><block type=\"pxt-on-start\" x=\"20\" y=\"20\"></block><block type=\"device_forever\" x=\"225\" y=\"20\"></block></xml>","main.ts":"","README.md":"","main.py":"def left_signal():\n    #set front and back lights on left_signal\n    pass\n    #while True:\n    #turn on for 1 second\n    #turn off for 1 second\n    #pass\n\n\ndef right_signal():\n    #set front and back lights on right_signal\n    pass\n    #while True:\n    #turn on for one second\n    #turn off for one second\n    #pass\n\ndef lights_off():\n    #Turn all lights off\n    pass\n\n\n#input.button_is_pressed(Button.A, left_signal)\n\n#input.button_is_pressed(Button.A, lights_off)\n\n#input.button_is_pressed(Button.B, right_signal)\n\n#input.button_is_pressed(Button.B, lights_off)\n","pxt.json":"{\n    \"name\": \"Kitronik Signal Lights\",\n    \"description\": \"\",\n    \"dependencies\": {\n        \"core\": \"*\",\n        \"radio\": \"*\",\n        \"microphone\": \"*\",\n        \"pxt-kitronik-move-motor\": \"github:kitronikltd/pxt-kitronik-move-motor#v0.4.20\"\n    },\n    \"files\": [\n        \"main.blocks\",\n        \"main.ts\",\n        \"README.md\",\n        \"main.py\"\n    ],\n    \"preferredEditor\": \"pyprj\"\n}\n"}},{"timestamp":1744664146521,"editorVersion":"7.0.61","text":{"main.blocks":"<xml xmlns=\"https://developers.google.com/blockly/xml\"><variables></variables><block type=\"pxt-on-start\" x=\"20\" y=\"20\"></block><block type=\"device_forever\" x=\"225\" y=\"20\"></block></xml>","main.ts":"","README.md":"","main.py":"#Turns off all LEDs by grouping them, changing the rgb to 0,0,0\n#You must show your color once it has been set.\nAll_LED = Kitronik_Move_Motor.create_move_motor_zipled(4)\nAll_LED.set_color(Kitronik_Move_Motor.colors(Kitronik_Move_Motor.ZipLedColors.BLACK))\nAll_LED.show()\n\n#LEDs are regrouped into front lights and back lights.\n#The range parameter indicates which LED to start with and the number\n#of consecutive LED's in that group (includeing the first).\nFront_Left_LED = All_LED.range(0, 1)\nFront_Right_LED = All_LED.range(1,1)\nBack_Left_LED = All_LED.range(3, 1)\nBack_Right_LED = All_LED.range(2,1) \n\ndef Left_Signal():\n    pause(100)\n    while not (input.button_is_pressed(Button.A)):\n        Front_Left_LED.set_color(Kitronik_Move_Motor.colors(Kitronik_Move_Motor.ZipLedColors.WHITE))\n        Front_Left_LED.set_brightness(50)\n        Front_Left_LED.show()\n        pause(1000)\n        Front_Left_LED.set_color(Kitronik_Move_Motor.colors(Kitronik_Move_Motor.ZipLedColors.BLACK))\n        Front_Left_LED.show()\n        Back_Left_LED.set_color(Kitronik_Move_Motor.colors(Kitronik_Move_Motor.ZipLedColors.RED))\n        Back_Left_LED.set_brightness(50)\n        Back_Left_LED.show()\n        pause(1000)\n        Back_Left_LED.set_color(Kitronik_Move_Motor.colors(Kitronik_Move_Motor.ZipLedColors.BLACK))\n        Back_Left_LED.show()\n\n\ndef Right_Signal():\n    pause(100)\n    while not (input.button_is_pressed(Button.B)):\n        Front_Right_LED.set_color(Kitronik_Move_Motor.colors(Kitronik_Move_Motor.ZipLedColors.WHITE))\n        Front_Right_LED.set_brightness(50)\n        Front_Right_LED.show()\n        pause(1000)\n        Front_Right_LED.set_color(Kitronik_Move_Motor.colors(Kitronik_Move_Motor.ZipLedColors.BLACK))\n        Front_Right_LED.show()\n        Back_Right_LED.set_color(Kitronik_Move_Motor.colors(Kitronik_Move_Motor.ZipLedColors.RED))\n        Back_Right_LED.set_brightness(50)\n        Back_Right_LED.show()\n        pause(1000)\n        Back_Right_LED.set_color(Kitronik_Move_Motor.colors(Kitronik_Move_Motor.ZipLedColors.BLACK))\n        Back_Right_LED.show()\n\nLeft_Signal()\n\ninput.button_is_pressed()\n#input.button_is_pressed(Button.A, lights_off)\n\n#input.button_is_pressed(Button.B, right_signal)\n\n#input.button_is_pressed(Button.B, lights_off)\n\n\n\n","pxt.json":"{\n    \"name\": \"Kitronik Signal Lights\",\n    \"description\": \"\",\n    \"dependencies\": {\n        \"core\": \"*\",\n        \"radio\": \"*\",\n        \"microphone\": \"*\",\n        \"pxt-kitronik-move-motor\": \"github:kitronikltd/pxt-kitronik-move-motor#v0.4.20\"\n    },\n    \"files\": [\n        \"main.blocks\",\n        \"main.ts\",\n        \"README.md\",\n        \"main.py\"\n    ],\n    \"preferredEditor\": \"pyprj\"\n}\n"}},{"timestamp":1744666002376,"editorVersion":"7.0.61","text":{"main.blocks":"<xml xmlns=\"https://developers.google.com/blockly/xml\"><variables></variables><block type=\"pxt-on-start\" x=\"20\" y=\"20\"></block><block type=\"device_forever\" x=\"225\" y=\"20\"></block></xml>","main.ts":"","README.md":"","main.py":"#Turns off all LEDs by grouping them, changing the rgb to 0,0,0\n#You must show your color once it has been set.\nAll_LED = Kitronik_Move_Motor.create_move_motor_zipled(4)\nAll_LED.set_color(Kitronik_Move_Motor.colors(Kitronik_Move_Motor.ZipLedColors.BLACK))\nAll_LED.show()\n\n#LEDs are regrouped into front lights and back lights.\n#The range parameter indicates which LED to start with and the number\n#of consecutive LED's in that group (includeing the first).\nFront_Left_LED = All_LED.range(0, 1)\nFront_Right_LED = All_LED.range(1,1)\nBack_Left_LED = All_LED.range(3, 1)\nBack_Right_LED = All_LED.range(2,1) \n\ndef Left_Signal():\n    pause(100)\n    while (input.logo_is_pressed() ==False):\n        Front_Left_LED.set_color(Kitronik_Move_Motor.colors(Kitronik_Move_Motor.ZipLedColors.WHITE))\n        Front_Left_LED.set_brightness(50)\n        Front_Left_LED.show()\n        pause(1000)\n        Front_Left_LED.set_color(Kitronik_Move_Motor.colors(Kitronik_Move_Motor.ZipLedColors.BLACK))\n        Front_Left_LED.show()\n        Back_Left_LED.set_color(Kitronik_Move_Motor.colors(Kitronik_Move_Motor.ZipLedColors.RED))\n        Back_Left_LED.set_brightness(50)\n        Back_Left_LED.show()\n        pause(1000)\n        Back_Left_LED.set_color(Kitronik_Move_Motor.colors(Kitronik_Move_Motor.ZipLedColors.BLACK))\n        Back_Left_LED.show()\n        \n\n\ndef Right_Signal():\n    pause(100)\n    while (input.logo_is_pressed() ==False): \n        Front_Right_LED.set_color(Kitronik_Move_Motor.colors(Kitronik_Move_Motor.ZipLedColors.WHITE))\n        Front_Right_LED.set_brightness(50)\n        Front_Right_LED.show()\n        pause(1000)\n        Front_Right_LED.set_color(Kitronik_Move_Motor.colors(Kitronik_Move_Motor.ZipLedColors.BLACK))\n        Front_Right_LED.show()\n        Back_Right_LED.set_color(Kitronik_Move_Motor.colors(Kitronik_Move_Motor.ZipLedColors.RED))\n        Back_Right_LED.set_brightness(50)\n        Back_Right_LED.show()\n        pause(1000)\n        Back_Right_LED.set_color(Kitronik_Move_Motor.colors(Kitronik_Move_Motor.ZipLedColors.BLACK))\n        Back_Right_LED.show()\n\n\ndef main():\n    while True:\n        if input.button_is_pressed(Button.B)==True:\n            Left_Signal()\n        if input.button_is_pressed(Button.A)==True:\n            Right_Signal()\n\nmain()\n\n#input.button_is_pressed(ignal#input.button_is_pressed(Button.A, Right_Signal)\n\n\n\n        ","pxt.json":"{\n    \"name\": \"Kitronik Signal Lights\",\n    \"description\": \"\",\n    \"dependencies\": {\n        \"core\": \"*\",\n        \"radio\": \"*\",\n        \"microphone\": \"*\",\n        \"pxt-kitronik-move-motor\": \"github:kitronikltd/pxt-kitronik-move-motor#v0.4.20\"\n    },\n    \"files\": [\n        \"main.blocks\",\n        \"main.ts\",\n        \"README.md\",\n        \"main.py\"\n    ],\n    \"preferredEditor\": \"pyprj\"\n}\n"}},{"timestamp":1744731890738,"editorVersion":"7.0.61","text":{"main.blocks":"<xml xmlns=\"https://developers.google.com/blockly/xml\"><variables></variables><block type=\"pxt-on-start\" x=\"20\" y=\"20\"></block><block type=\"device_forever\" x=\"225\" y=\"20\"></block></xml>","main.ts":"","README.md":"","main.py":"#Turns off all LEDs by grouping them, changing the rgb to 0,0,0\n#You must show your color once it has been set.\nAll_LED = Kitronik_Move_Motor.create_move_motor_zipled(4)\nAll_LED.set_color(Kitronik_Move_Motor.colors(Kitronik_Move_Motor.ZipLedColors.BLACK))\nAll_LED.show()\n\n#LEDs are regrouped into front lights and back lights.\n#The range parameter indicates which LED to start with and the number\n#of consecutive LED's in that group (includeing the first).\nFront_Left_LED = All_LED.range(0, 1)\nFront_Right_LED = All_LED.range(1,1)\nBack_Left_LED = All_LED.range(3, 1)\nBack_Right_LED = All_LED.range(2,1) \n\ndef Left_Signal():\n    pause(100)\n    while (input.logo_is_pressed() ==False):\n        Front_Left_LED.set_color(Kitronik_Move_Motor.colors(Kitronik_Move_Motor.ZipLedColors.WHITE))\n        Front_Left_LED.set_brightness(50)\n        Front_Left_LED.show()\n        pause(1000)\n        Front_Left_LED.set_color(Kitronik_Move_Motor.colors(Kitronik_Move_Motor.ZipLedColors.BLACK))\n        Front_Left_LED.show()\n        Back_Left_LED.set_color(Kitronik_Move_Motor.colors(Kitronik_Move_Motor.ZipLedColors.RED))\n        Back_Left_LED.set_brightness(50)\n        Back_Left_LED.show()\n        pause(1000)\n        Back_Left_LED.set_color(Kitronik_Move_Motor.colors(Kitronik_Move_Motor.ZipLedColors.BLACK))\n        Back_Left_LED.show()\n        \n\n\ndef Right_Signal():\n    pause(100)\n    while (input.logo_is_pressed() ==False): \n        Front_Right_LED.set_color(Kitronik_Move_Motor.colors(Kitronik_Move_Motor.ZipLedColors.WHITE))\n        Front_Right_LED.set_brightness(50)\n        Front_Right_LED.show()\n        pause(1000)\n        Front_Right_LED.set_color(Kitronik_Move_Motor.colors(Kitronik_Move_Motor.ZipLedColors.BLACK))\n        Front_Right_LED.show()\n        Back_Right_LED.set_color(Kitronik_Move_Motor.colors(Kitronik_Move_Motor.ZipLedColors.RED))\n        Back_Right_LED.set_brightness(50)\n        Back_Right_LED.show()\n        pause(1000)\n        Back_Right_LED.set_color(Kitronik_Move_Motor.colors(Kitronik_Move_Motor.ZipLedColors.BLACK))\n        Back_Right_LED.show()\n\n\ndef main():\n    while True:\n        if input.button_is_pressed(Button.B)==True:\n            Left_Signal()\n        if input.button_is_pressed(Button.A)==True:\n            Right_Signal()\n\nmain()\n\n\n\n\n        ","pxt.json":"{\n    \"name\": \"Kitronik Signal Lights\",\n    \"description\": \"\",\n    \"dependencies\": {\n        \"core\": \"*\",\n        \"radio\": \"*\",\n        \"microphone\": \"*\",\n        \"pxt-kitronik-move-motor\": \"github:kitronikltd/pxt-kitronik-move-motor#v0.4.20\"\n    },\n    \"files\": [\n        \"main.blocks\",\n        \"main.ts\",\n        \"README.md\",\n        \"main.py\"\n    ],\n    \"preferredEditor\": \"pyprj\"\n}\n"}}],"shares":[],"lastSaveTime":1744732526191}